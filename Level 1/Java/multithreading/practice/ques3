import java.util.Scanner;

class MatrixMultiplication implements Runnable {
    private int[][] matrix1;
    private int[][] matrix2;
    private int[][] result;
    private int startRow;
    private int endRow;

    public MatrixMultiplication(int[][] matrix1, int[][] matrix2, int[][] result, int startRow, int endRow) {
        this.matrix1 = matrix1;
        this.matrix2 = matrix2;
        this.result = result;
        this.startRow = startRow;
        this.endRow = endRow;
    }

    @Override
    public void run() {
        for (int i = startRow; i < endRow; i++) {
            for (int j = 0; j < matrix2[0].length; j++) {
                result[i][j] = 0;
                for (int k = 0; k < matrix1[0].length; k++) {
                    result[i][j] += matrix1[i][k] * matrix2[k][j];
                }
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read dimensions of Matrix 1
        int r1 = scanner.nextInt();
        int c1 = scanner.nextInt();
        scanner.nextLine(); 
        int r2 = scanner.nextInt();
        int c2 = scanner.nextInt();
        scanner.nextLine();
        if (c1 != r2) {
            System.out.println("Matrix multiplication not possible: Inner dimensions must match.");
            return;
        }
        int[][] matrix1 = new int[r1][c1];
        for (int i = 0; i < r1; i++) {
            for (int j = 0; j < c1; j++) {
                matrix1[i][j] = scanner.nextInt();
            }
        }
        int[][] matrix2 = new int[r2][c2];
        for (int i = 0; i < r2; i++) {
            for (int j = 0; j < c2; j++) {
                matrix2[i][j] = scanner.nextInt();
            }
        }
        int[][] result = new int[r1][c2];
        Thread[] threads = new Thread[r1];
        for (int i = 0; i < r1; i++) {
            threads[i] = new Thread(new MatrixMultiplication(matrix1, matrix2, result, i, i + 1));
            threads[i].start();
        }
        try {
            for (Thread thread : threads) {
                thread.join();
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        for (int i = 0; i < r1; i++) {
            for (int j = 0; j < c2; j++) {
                System.out.print(result[i][j] + " ");
            }
            System.out.println();
        }
        scanner.close();
    }
}